<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI">

    <Style x:Key="{x:Type ToggleButton}" TargetType="ToggleButton">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1BackgroundBrush}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1BorderBrush}}"/>
        <Setter Property="BorderThickness" Value="{DynamicResource {x:Static adonisUi:Dimensions.BorderThickness}}"/>
        <Setter Property="Padding" Value="8, 4"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{DynamicResource {x:Static adonisUi:Dimensions.CornerRadius}}">

                        <Grid>
                            <Border x:Name="InnerShadowHost"
                                    BorderThickness="0, 1, 0, 0"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    CornerRadius="{DynamicResource {x:Static adonisUi:Dimensions.CornerRadius}}"
                                    Opacity="0.05"
                                    Visibility="Hidden">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0 0" EndPoint="0 1">
                                        <GradientStop Color="#000000" Offset="0"/>
                                        <GradientStop Color="#ffffff" Offset="0.5"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>

                            <ContentPresenter Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="InnerShadowHost" Value="Visible"/>
                        </Trigger>

                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1HightlightBrush}}"/>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1HightlightBrush}}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.AccentBrush}}"/>
            </Trigger>

            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static adonisUi:Brushes.AccentBrush}}"/>
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.DisabledForegroundBrush}}"/>
            </Trigger>

        </Style.Triggers>
    </Style>

</ResourceDictionary>